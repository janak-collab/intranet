<?php
/**
 * GMPM Application Entry Point - Modern Routing Version
 * Enhanced with Role-Based Dashboard Support
 */

// Define paths
define('ROOT_PATH', dirname(__DIR__));
define('APP_PATH', ROOT_PATH . '/app');
define('PUBLIC_PATH', __DIR__);
define('STORAGE_PATH', ROOT_PATH . '/storage');

// Security check
if (file_exists(__DIR__ . '/.env')) {
    die('Security Error: .env file should not be in public directory!');
}

// Check vendor directory
if (!file_exists(APP_PATH . '/vendor/autoload.php')) {
    die('Error: Vendor directory not found. Please run composer install.');
}

// Autoload
require_once APP_PATH . '/vendor/autoload.php';

// Bootstrap application
require_once APP_PATH . '/src/bootstrap.php';

// Initialize router
try {
    $router = new \App\Router();
    
    // Get request method and URI
    $method = $_SERVER['REQUEST_METHOD'];
    $uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
    
    // Log access for monitoring
    error_log("Access: " . $_SERVER['REMOTE_ADDR'] . " - " . $method . " " . $uri);
    
    // Dispatch request
    $result = $router->dispatch($method, $uri);
    
    // Handle result
    if ($result === false) {
        // 404 Not Found
        http_response_code(404);
        if (file_exists(__DIR__ . '/errors/404.html')) {
            include __DIR__ . '/errors/404.html';
        } else {
            echo "404 - Not Found";
        }
    }
    // Router handles the response internally
    
} catch (Exception $e) {
    // Log error with more detail
    error_log("Router error: " . $e->getMessage() . " in " . $e->getFile() . " on line " . $e->getLine());
    
    // Show 500 error
    http_response_code(500);
    if (file_exists(__DIR__ . '/errors/500.html')) {
        include __DIR__ . '/errors/500.html';
    } else {
        // In development, show error details
        if (($_ENV['APP_ENV'] ?? 'production') === 'development') {
            echo "<h1>500 - Internal Server Error</h1>";
            echo "<p>" . htmlspecialchars($e->getMessage()) . "</p>";
            echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
        } else {
            echo "500 - Internal Server Error";
        }
    }
}
